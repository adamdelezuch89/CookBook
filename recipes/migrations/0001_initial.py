# Generated by Django 5.1.5 on 2025-01-26 17:32

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nazwa kategorii')),
            ],
            options={
                'verbose_name': 'Kategoria',
                'verbose_name_plural': 'Kategorie',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nazwa etykiety')),
            ],
            options={
                'verbose_name': 'Etykieta',
                'verbose_name_plural': 'Etykiety',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nazwa Przepisu')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Opis')),
                ('image', models.ImageField(blank=True, null=True, upload_to='recipes/', verbose_name='Zdjęcie')),
                ('rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Ocena')),
                ('prep_time', models.IntegerField(blank=True, null=True, verbose_name='Czas przygotowania (min)')),
                ('cook_time', models.IntegerField(blank=True, null=True, verbose_name='Czas gotowania (min)')),
                ('idle_time', models.IntegerField(blank=True, null=True, verbose_name='Czas bezczynności (min)')),
                ('total_time', models.IntegerField(blank=True, null=True, verbose_name='Czas całkowity (min)')),
                ('servings', models.PositiveIntegerField(blank=True, null=True, verbose_name='Liczba porcji')),
                ('ingredients', models.TextField(blank=True, null=True, verbose_name='Składniki')),
                ('instructions', models.TextField(blank=True, null=True, verbose_name='Sposób przygotowania')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Uwagi')),
                ('nutrition', models.TextField(blank=True, null=True, verbose_name='Wartości odżywcze')),
                ('equipment', models.TextField(blank=True, null=True, verbose_name='Naczynia')),
                ('video', models.URLField(blank=True, null=True, verbose_name='Link do filmu')),
                ('source', models.CharField(blank=True, max_length=200, null=True, verbose_name='Źródło')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data modyfikacji')),
                ('categories', models.ManyToManyField(blank=True, to='recipes.category', verbose_name='Kategorie')),
                ('tags', models.ManyToManyField(blank=True, to='recipes.tag', verbose_name='Etykiety')),
            ],
            options={
                'verbose_name': 'Przepis',
                'verbose_name_plural': 'Przepisy',
                'ordering': ['-created_at'],
            },
        ),
    ]
